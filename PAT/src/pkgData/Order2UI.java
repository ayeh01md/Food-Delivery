package pkgData;

import java.util.Timer;
import java.util.TimerTask;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.ListIterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Order2UI extends javax.swing.JFrame {

    /**
     * Creates new form Order2UI
     */
    public Order2UI() {
        initComponents();
        show_order();
    }
    //Instantiating objects and creating fields
    ListIterator<OrderTime> iterator;
    TimerManager obj = new TimerManager();
    TimerTask repeatedTask;
    Timer timer;
    Text text = new Text();
    private int s = 0;

    //Creates format for Date values so as to only display time value
    SimpleDateFormat MinFormat = new SimpleDateFormat("mm:ss");
    SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
    String CurrentTime = dateFormat.format(Calendar.getInstance().getTime());

    //Displays values in the table
    public void show_order() {
        //Obtains values and creates an array to store them
        ArrayList<OrderTime> list = obj.getAllFields();
        DefaultTableModel model = (DefaultTableModel) tblTime.getModel();
        Object[] row = new Object[4];

        //Sorts each value into its respectable field and displays
        for (int i = 0; i < list.size(); i++) {
            String OrdTime = list.get(i).getTime().toString();
            //Calculates the time left for an order
            if (obj.CalculateTime(OrdTime) + (list.get(i).getPrepTime() * 60) > obj.CalculateTime(CurrentTime)) {
                row[0] = list.get(i).getOrderID();
                row[1] = list.get(i).getFoodname();
                row[2] = list.get(i).getPrepTime();
                row[3] = list.get(i).getTime();
                model.addRow(row);
            }
        }
    }

    public void startStopwatch(int temp) {
        s = temp;
        repeatedTask = new TimerTask() {
            //Starts countdown timer
            public void run() {
                if (s >= 0) {
                    //Displays time in minute format
                    String time = String.format("%02d:%02d", s / 60, s % 60);
                    txfTimer.setText("" + time);
                    s--;
                }
            }
        };

        //Sets the interval of the timer change every 1 sec
        timer = new Timer("Timer");
        long delay = 0L;
        long period = 1000L;
        timer.scheduleAtFixedRate(repeatedTask, delay, period);
    }

    //Selects table row and starts calculation
    public void TableClick() {
        int i = tblTime.getSelectedRow();
        String OrderTime = "";
        OrderTime = OrderTime + obj.CalculateTime(tblTime.getValueAt(i, 3).toString());
        String Prep = tblTime.getValueAt(i, 2).toString();
        //Calculates how much time is left for an order to be prepared
        startStopwatch(Integer.parseInt(OrderTime) + (Integer.parseInt(Prep) * 60) - obj.CalculateTime(CurrentTime));
    }

    //Cancels countdown timer
    public void stopTimer() {
        timer.cancel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTime = new javax.swing.JTable();
        btnMainMenu = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txfTimer = new javax.swing.JTextField();
        lblTimer = new javax.swing.JLabel();
        btnStop = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(895, 575));
        getContentPane().setLayout(null);

        tblTime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "FoodName", "PrepTime(min)", "OrderTime"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTime.setRowHeight(40);
        tblTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTimeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTime);
        if (tblTime.getColumnModel().getColumnCount() > 0) {
            tblTime.getColumnModel().getColumn(0).setMaxWidth(80);
            tblTime.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 40, 538, 402);

        btnMainMenu.setText("Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnMainMenu);
        btnMainMenu.setBounds(750, 460, 100, 40);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(30, 460, 100, 40);

        txfTimer.setEditable(false);
        txfTimer.setFont(new java.awt.Font("新細明體", 0, 20)); // NOI18N
        getContentPane().add(txfTimer);
        txfTimer.setBounds(610, 270, 240, 50);

        lblTimer.setFont(new java.awt.Font("新細明體", 0, 24)); // NOI18N
        lblTimer.setForeground(new java.awt.Color(255, 255, 255));
        lblTimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTimer.setText("Remaining Time");
        getContentPane().add(lblTimer);
        lblTimer.setBounds(640, 210, 180, 50);

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });
        getContentPane().add(btnStop);
        btnStop.setBounds(681, 337, 90, 50);

        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        getContentPane().add(btnHelp);
        btnHelp.setBounds(790, 10, 59, 27);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkgData/Restaurant.PNG"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-4, -2, 890, 530);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //Goes to OrderUI Interface
        OrderUI order = new OrderUI();
        order.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
        // Goes to Mainscreen Interface
        MainScreen main = new MainScreen();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMainMenuActionPerformed

    private void tblTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTimeMouseClicked
        //Calculates the duration of timer and starts it
        TableClick();
    }//GEN-LAST:event_tblTimeMouseClicked

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        //Stops Timer
        stopTimer();
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        //Displays help message for this UI
        JOptionPane.showMessageDialog(null, text.Help5());
    }//GEN-LAST:event_btnHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order2UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order2UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order2UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order2UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order2UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTimer;
    private javax.swing.JTable tblTime;
    private javax.swing.JTextField txfTimer;
    // End of variables declaration//GEN-END:variables
}
